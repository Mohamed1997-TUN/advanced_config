---
- name: Compliance Check and Push Firewall Policy via SSH
  hosts: fortigate
  gather_facts: no

  vars_files:
    - vars/matrix.yml  # This file should define 'compliant_rules'

  tasks:
    - name: Set firewall policy from survey inputs
      set_fact:
        policy:
          name: "{{ policy_name }}"
          srcintf: "{{ policy_srcintf }}"
          dstintf: "{{ policy_dstintf }}"
          source: "{{ policy_srcaddr }}"
          destination: "{{ policy_dstaddr }}"
          action: "{{ policy_action }}"
          schedule: "{{ policy_schedule }}"
          service: "{{ policy_service }}"
          nat: "{{ policy_nat }}"

    - name: Check if rule is compliant with matrix
      set_fact:
        rule_compliant: >-
          {{
            compliant_rules
            | selectattr('srcintf', 'equalto', policy.srcintf)
            | selectattr('dstintf', 'equalto', policy.dstintf)
            | selectattr('allowed_services', 'defined')
            | selectattr('allowed_services', 'search', policy.service | join(','))
            | list | length > 0
          }}

    - name: Show compliance result
      debug:
        msg: "‚úÖ The rule is compliant!"
      when: rule_compliant

    - name: Reject non-compliant rule
      debug:
        msg: "‚ùå This rule is non-compliant and will not be pushed."
      when: not rule_compliant

    - name: Render firewall rule config to a file
      ansible.builtin.template:
        src: templates/firewallrule.j2
        dest: /tmp/fortigate_config.txt
      delegate_to: localhost
      when: rule_compliant

    - name: Read rendered config
      ansible.builtin.slurp:
        src: /tmp/fortigate_config.txt
      register: slurped_config
      delegate_to: localhost
      when: rule_compliant

    - name: Push CLI config to FortiGate
      ansible.builtin.raw: "{{ slurped_config['content'] | b64decode }}"
      register: result
      changed_when: false
      when: rule_compliant

    - name: Display rule creation result
      debug:
        msg: "üì§ Rule creation response: {{ result }}"
      when: rule_compliant and result is defined

    - name: Confirm firewall rule push success
      debug:
        msg: "‚úÖ Firewall rule '{{ policy.name }}' pushed successfully!"
      when: rule_compliant and result is defined
