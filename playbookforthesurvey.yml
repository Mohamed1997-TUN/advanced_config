---
- name: Compliance Check and Push Firewall Policy via SSH
  hosts: fortigate
  gather_facts: no

  vars_files:
    - vars/matrix.yml

  tasks:

    - name: Set firewall policy from survey inputs
      set_fact:
        policy:
          policy_name: "{{ policy_name }}"
          srcintf: "{{ srcintf }}"
          dstintf: "{{ dstintf }}"
          service: "{{ service }}"

    - name: Check if rule is compliant with matrix
      set_fact:
        rule_compliant: >-
          {{ compliant_rules | selectattr('srcintf', 'equalto', policy.srcintf)
                            | selectattr('dstintf', 'equalto', policy.dstintf)
                            | selectattr('allowed_services', 'defined')
                            | selectattr('allowed_services', 'contains', policy.service)
                            | list | length > 0 }}

    - name: Show compliance result
      debug:
        msg: >-
          {% if rule_compliant %}
            ✅ Rule is compliant and will be pushed.
          {% else %}
            ❌ Rule is NOT compliant. Skipping push.
          {% endif %}

    - name: Render CLI config into a local file
      ansible.builtin.template:
        src: templates/firewallrule.j2
        dest: /tmp/fortigate_config.txt
      delegate_to: localhost
      when: rule_compliant

    - name: Read generated config content
      ansible.builtin.slurp:
        src: /tmp/fortigate_config.txt
      register: slurped_config
      delegate_to: localhost
      when: rule_compliant

    - name: Push CLI config to FortiGate
      ansible.builtin.raw: "{{ slurped_config['content'] | b64decode }}"
      register: result
      changed_when: false
      when: rule_compliant

    - name: Show push result
      debug:
        msg: "Firewall rule pushed successfully! Response: {{ result.stdout_lines | default([]) }}"
      when: rule_compliant and result is defined
