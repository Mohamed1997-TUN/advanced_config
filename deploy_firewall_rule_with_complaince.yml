---
- name: Compliance Check and Push Firewall Policy via AWX Survey
  hosts: fortigate
  gather_facts: no

  vars_files:
    - ../vars/matrix.yml
    - ../vars/policy_params.yml

  tasks:
    # Load policy from survey or fallback to file
    - name: Set dynamic policy from survey
      set_fact:
        policy: >-
          {{
            {
              'name': survey_policy_name | default(vars[active_test].name),
              'srcintf': survey_srcintf | default(vars[active_test].srcintf),
              'dstintf': survey_dstintf | default(vars[active_test].dstintf),
              'service': survey_service | default(vars[active_test].service),
              'policy_action': survey_action | default(vars[active_test].policy_action),
              'srcaddr': survey_srcaddr | default(vars[active_test].srcaddr),
              'dstaddr': survey_dstaddr | default(vars[active_test].dstaddr),
              'nat': survey_nat | default(vars[active_test].nat),
              'id': survey_policy_id | default(vars[active_test].id | default('auto'))
            }
          }}
      when: active_test is defined

    # Compliance check
    - name: Validate rule against matrix
      set_fact:
        rule_compliant: >-
          {{ compliant_rules
            | selectattr('srcintf', 'equalto', policy.srcintf)
            | selectattr('dstintf', 'equalto', policy.dstintf)
            | selectattr('allowed_services', 'contains', policy.service)
            | list | length > 0 }}

    # Fail fast if non-compliant
    - name: Enforce compliance
      fail:
        msg: "‚ùå Rule violates matrix: srcintf={{ policy.srcintf }}, dstintf={{ policy.dstintf }}, service={{ policy.service }}"
      when: not rule_compliant

    # Generate and push config
    - name: Render FortiGate config
      template:
        src: ../templates/firewallrule.j2
        dest: /tmp/fortigate-{{ inventory_hostname }}.txt
      delegate_to: localhost
      when: rule_compliant

    - name: Push config to FortiGate
      ansible.builtin.raw: "{{ lookup('file', '/tmp/fortigate-' + inventory_hostname + '.txt') }}"
      register: push_result
      changed_when: push_result.rc == 0
      when: rule_compliant

    - name: Cleanup
      file:
        path: "/tmp/fortigate-{{ inventory_hostname }}.txt"
        state: absent
      delegate_to: localhost
      when: rule_compliant